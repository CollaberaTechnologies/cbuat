@model WebApplication6.Models.CL_CLOSING_BLOCK

@{

    ViewBag.Title = "Dashboard";

    ViewBag.Title = "NewBlock";

    if (Session["uiid"] == null)

    {

        Response.Redirect("/account/login");

    }

}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />

<meta charset="utf-8" />

<link rel="icon" type="image/png" href="assets/img/favicon.ico">

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

<title>Light Bootstrap Dashboard by Creative Tim</title>

<meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />

<meta name="viewport" content="width=device-width" />



<style>
    .heading {
        width: 150px;
        height: 150px;
        background-color: white;
        background-size: cover;
        display: block;
        border-radius: 100px;
        -webkit-border-radius: 100px;
        -moz-border-radius: 100px;
        color: black;
        padding: 15px 15px;
        opacity: 0.2;
    }



    .b1 {
        color: #ffffff;
        margin-top: 0px;
        margin-left: 94%;
        background-color: #d9534f;
        border-color: #d43f3a;
    }







    .bar {
        height: 476px;
    }



    .session {
        color: black;
        margin-left: 46px;
    }



    .collalogo {
        text-align: center;
        display: block;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        padding: 5px 0px;
        display: block;
        font-size: 32px;
        color: white;
        text-align: center;
        font-weight: 300;
        line-height: 30px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }



    .side1 {
        background: #50b1fb;
    }



    .center {
        margin: 0 auto;
    }



    .form-group {
        width: 100%;
    }



    .awesome {
        font-family: futura;
        font-style: italic;
        width: 100%;
        margin: 0 auto;
        text-align: center;
        color: blue;
        font-size: 35px;
        font-weight: bold;
        position: absolute;
        -webkit-animation: colorchange 20s infinite alternate;
    }



    .form-control {
        width: 280px;
    }



    .c1 {
        padding: 30px 15px;
        /*min-height: calc(100% - 123px);*/
        /*background-image: url('../../Content/themes/base/images/beverage-blank-break-997719.jpg');*/
        background-image: url('../../Content/themes/base/images/background-black-blank-733857.jpg');
        display: block;
        background-size: cover;
        min-height: 90vh;
    }



    .sidebar-wrapper1 {
        position: relative;
        max-height: calc(100vh - 75px);
        min-height: 100%;
        overflow: auto;
        width: 260px;
        z-index: 4;
        padding-bottom: 100px;
        background-color: #50b1fb;
    }

    .ch1 {
        position: relative;
        display: block;
        overflow: hidden;
        padding: 4px 0 0 9px;
        height: 35px;
        width: 100%;
        border: 1px solid #aaa;
        border-radius: 5px;
        background-color: #fff;
        background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(20%, #ffffff), color-stop(50%, #f6f6f6), color-stop(52%, #eeeeee), color-stop(100%, #f4f4f4));
        background: -webkit-linear-gradient(top, #ffffff 20%, #f6f6f6 50%, #eeeeee 52%, #f4f4f4 100%);
        background: -moz-linear-gradient(top, #ffffff 20%, #f6f6f6 50%, #eeeeee 52%, #f4f4f4 100%);
        background: -o-linear-gradient(top, #ffffff 20%, #f6f6f6 50%, #eeeeee 52%, #f4f4f4 100%);
        background: linear-gradient(top, #ffffff 20%, #f6f6f6 50%, #eeeeee 52%, #f4f4f4 100%);
        background-clip: padding-box;
        box-shadow: 0 0 3px white inset, 0 1px 1px rgba(0, 0, 0, 0.1);
        color: #444;
        text-decoration: none;
        white-space: nowrap;
        line-height: 24px;
    }
</style>

<link href="../assets/css/bootstrap.min.css" rel="stylesheet" />

<link href="../assets/css/animate.min.css" rel="stylesheet" />

<link href="../assets/css/light-bootstrap-dashboard.css" rel="stylesheet" />

<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">

<link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>

<link href="../assets/css/pe-icon-7-stroke.css" rel="stylesheet" />

<link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
      rel="stylesheet" type="text/css" />

<script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"></script>

<link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
      rel="stylesheet" type="text/css" />

<script src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />



<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<link href="~/Content/chosen.css" rel="stylesheet" />



<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>

<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.min.js"></script>



<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.2.620/styles/kendo.common.min.css" />

<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.2.620/styles/kendo.blueopal.min.css" />

<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2018.2.620/styles/kendo.blueopal.mobile.min.css" />



<script src="~/Content/Themes1/ckeditor/ckeditor.js"></script>



<!--DASHBOARD VIEW-->

<div class="modal" id="jd" tabindex="-1">

    <div class="modal-dialog" style="margin-left: -15%;margin-top: 2%;width: 93%;height: 857px;padding-top: 0px;overflow:hidden;">

        <div class="modal-content" style="height:842px;width:101%;">

            <button type="button" class="close" data-dismiss="modal"><i class="icon-xs-o-md"></i></button>

            <div class="modal-header">

                <h4 class="modal-title caps"><strong>Job Description</strong></h4>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>



            </div>

            <div class="modal-body">



                @Html.TextArea("name", (string)ViewBag.jd, 34, 210, new { @id = "FullDescription", @readonly = "readonly" })

                <script>

                    CKEDITOR.replace("FullDescription", {

                        height:600

                    });



                </script>

            </div>



        </div>

    </div>

</div>

<div class="wrapper">

    <div class="sidebar" data-color="blue" data-image="assets/img/sidebar-5.jpg">

        <!--



            Tip 1: you can change the color of the sidebar using: data-color="blue | azure | green | orange | red | purple"

            Tip 2: you can also add an image using data-image tag



        -->

        <div class="sidebar-wrapper1">

            <div class="logo">

                <a class="collalogo" href="Dash">

                    Collabera

                </a>

            </div>



            @*<div class="session">



                    <h5>@Session["uid"].ToString()</h5>

                    <h5 style="font-weight:600;">Login Time:</h5><h5>@Session["Time"].ToString()</h5>



                </div>*@

            <ul class="nav">

                <li>

                    <a href="/Dashboard/Dashboard">

                        <i class="glyphicon glyphicon-dashboard"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Dashboard</p>

                    </a>

                </li>



                <li>

                    <a href="/Dashboard/Pending">

                        <i class="glyphicon glyphicon-hourglass"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Pending</p>

                    </a>

                </li>

                <li>

                    <a href="/Dashboard/Approved">

                        <i class="glyphicon glyphicon-ok"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Approved</p>

                    </a>

                </li>



                <li>

                    <a href="/Dashboard/rejected">

                        <i class="glyphicon glyphicon-ban-circle"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Rejected</p>

                    </a>

                </li>

                <li class="active">

                    <a href="/Dashboard/NewBlock">

                        <i class="glyphicon glyphicon-plus"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">New Block</p>

                    </a>

                </li>

                <li>

                    <a href="/Account/ResetPassword">

                        <i class="glyphicon glyphicon-lock"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Change Password</p>

                    </a>

                </li>



                <li>

                    <a href='/account/logout'>



                        <i class="glyphicon glyphicon-off"></i>

                        <p style="margin: 0; line-height: 30px;font-size: 16px;font-weight: 400;margin-left: 45px;text-transform:capitalize;">Log out</p>

                    </a>

                </li>





            </ul>

        </div>

    </div>

    <div class="main-panel">

        <nav class="navbar navbar-default navbar-fixed">

            <div class="container-fluid">

                <div class="navbar-header">

                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">

                        <span class="sr-only">Toggle navigation</span>

                        <span class="icon-bar"></span>

                        <span class="icon-bar"></span>

                        <span class="icon-bar"></span>

                    </button>



                </div>

                <div class="collapse navbar-collapse">



                    <ul class="nav navbar-nav navbar-right">

                        @*<li>

                                <a href="/Dashboard/NewBlock" style="color:blue;">

                                    NewBlock

                                </a>

                            </li>*@

                        <li>

                            <p>

                                <label>@Session["uid"].ToString()</label>

                                <br />

                                @*@if (Session["rights"] != null)

                                    {

                                        <label>Reports to: @Session["rights"].ToString()</label>

                                    }*@



                            </p>

                        </li>



                        <li class="separator hidden-lg"></li>

                    </ul>

                </div>

            </div>

        </nav>







        <div class="c1">

            <div class="container-fluid">





                @using (Html.BeginForm("NewBlock", "Dashboard", FormMethod.Post))

                {

                    if (ViewBag.step1 == 1)

                    {



                        <div class="row">

                            <div class="col-md-12">



                                <div class="card" style="background-color:powderblue;">

                                    <div class="content">

                                        <div class="row">

                                            <h4 style="margin-left:29px;font-weight:bold; "> Step:1 Please Enter The Requirement </h4>



                                        </div>

                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-10">

                                                    <div class="form-group">

                                                        @Html.LabelFor(model => model.Jobcode, "Job Code", htmlAttributes: new { @class = "control-label", @style = "height:39px;font-weight:bold; " })



                                                        <div class="">

                                                            @Html.EditorFor(model => model.Jobcode, new { htmlAttributes = new { @class = "input-validation-error form-control col-md-12" } })

                                                            <label class="text-danger">@ViewBag.nojobcode</label>

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <br />

                                        <br />

                                        <div class="row">

                                            <div class='center'>



                                                <p class="awesome" style="margin:-50px -126px 10px;">OR</p>



                                            </div>

                                        </div>



                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <label class="control-label" style="width:111px;font-weight:bold; ">Client Name</label>

                                                        <div class="">



                                                            @Html.DropDownListFor(Model => Model.client, ViewBag.clients as List<SelectListItem>, "Please Select Client", new { @class = " form-control col-md-12 ch1 ", @style = "height:39px;" })

                                                        </div>

                                                    </div>

                                                </div>

                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <!--DROPDOWN FOR Location NAME-->



                                                        <label class="control-label" style="width:111px;font-weight:bold; ">Requirements</label>



                                                        @Html.DropDownListFor(Model => Model.Requirement, ViewBag.Requirements as List<SelectListItem>, new { @class = " form-control col-md-12 ch1", @style = "height:39px;" })



                                                    </div>



                                                </div>



                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <!--DROPDOWN FOR Requirement NAME-->



                                                        <label class="control-label" style="font-weight:bold;">Location</label>

                                                        @Html.DropDownListFor(Model => Model.location, ViewBag.locations as List<SelectListItem>, new { @class = " form-control col-md-12 ch1", @style = "height:39px;" })



                                                    </div>



                                                </div>







                                                <div class="col-md-1">

                                                    <div class="form-group">

                                                        <br />



                                                        @ViewBag.msg



                                                        <input type="submit" value="Submit" class="btn btn-primary">

                                                    </div>

                                                </div>



                                            </div>

                                        </div>





                                    </div>





                                </div>







                            </div>

                        </div>



                        <div class="row">

                            <div class="col-md-12">

                                <div class="card" style="background-color:powderblue;">

                                    <div class="content">

                                        <div class="row">

                                            <h4 style="margin-left:29px;font-weight:bold; "> Step:2 Confirm The Selected Requirement </h4>



                                        </div>

                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("clientname", "Client Name:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.clientname

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("req", "Requirement Name:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.req

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("lob", "LOB:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.lob

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("status", "Status:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.Status

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("br", "BR:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.br

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("pr", "PR:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.pr

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("jobcode", "Job Code:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.jobcode

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("Req Location", "Req Location:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.reqloc1

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        <a href="#" data-toggle="modal" data-target="#jd"> CLICK HERE TO VIEW JOB DESCRIPTION</a>



                                                        @*@Html.Label("jd", "Job Description:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })*@





                                                        @*@ViewBag.jd*@

                                                    </div>

                                                </div>

                                            </div>

                                        </div>



                                    </div>

                                </div>



                            </div>

                        </div>

                    }

                    else

                    {

                        <div class="row">

                            <div class="col-md-12">



                                <div class="card" style="background-color:powderblue;">

                                    <div class="content">

                                        <div class="row">

                                            <h4 style="margin-left:29px;font-weight:bold;"> Step:1 Please Enter The Requirement </h4>



                                        </div>

                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-10">

                                                    <div class="form-group">

                                                        @Html.LabelFor(model => model.Jobcode, "Job Code", htmlAttributes: new { @class = "control-label", @style = "height:39px;font-weight:bold;" })



                                                        <div class="">

                                                            @Html.EditorFor(model => model.Jobcode, new { htmlAttributes = new { @class = "input-validation-error form-control col-md-12", disabled = "disabled" } })

                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>

                                        <br />

                                        <br />

                                        <div class="row">

                                            <div class='center'>



                                                <p class="awesome" style="margin:-50px -126px 10px;">OR</p>



                                            </div>

                                        </div>



                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <label class="control-label" style="width:111px;font-weight:bold;">Client Name</label>

                                                        <div class="">

                                                            @Html.DropDownListFor(Model => Model.client, ViewBag.clients as List<SelectListItem>, "Please Select Client", new { @class = " form-control col-md-12", @style = "height:39px;", disabled = "disabled" })

                                                        </div>

                                                    </div>

                                                </div>

                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <!--DROPDOWN FOR Location NAME-->



                                                        <label class="control-label" style="width:111px;font-weight:bold;">Requirements</label>

                                                        @Html.DropDownListFor(Model => Model.Requirement, ViewBag.Requirements as List<SelectListItem>, new { @class = " form-control col-md-12", @style = "height:39px;", disabled = "disabled" })



                                                    </div>



                                                </div>



                                                <div class="col-md-4">

                                                    <div class="form-group">

                                                        <!--DROPDOWN FOR Requirement NAME-->



                                                        <label class="control-label" style="font-weight:bold;">Location</label>

                                                        @Html.DropDownListFor(Model => Model.location, ViewBag.locations as List<SelectListItem>, new { @class = " form-control col-md-12", @style = "height:39px;", disabled = "disabled" })



                                                    </div>



                                                </div>







                                                <div class="col-md-1">

                                                    <div class="form-group">

                                                        <br />



                                                        @ViewBag.msg



                                                        <input type="submit" value="Submit" class="btn btn-primary" disabled>

                                                    </div>

                                                </div>



                                            </div>

                                        </div>





                                    </div>





                                </div>







                            </div>

                        </div>



                        <div class="row">

                            <div class="col-md-12">

                                <div class="card" style="background-color:powderblue;">

                                    <div class="content">

                                        <div class="row">

                                            <h4 style="margin-left:29px;font-weight:bold;"> Step:2 Confirm The Selected Requirement </h4>



                                        </div>

                                        <div class="row">

                                            <div class="col-md-9">

                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("clientname", "Client Name:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.clientname

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("req", "Requirement Name:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.req

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("lob", "LOB:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.lob

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("status", "Status:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.Status

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("br", "BR:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.br

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("pr", "PR:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.pr

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        @Html.Label("jobcode", "Job Code:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                        @ViewBag.jobcode

                                                    </div>

                                                </div>



                                                <div class="col-md-6">

                                                    <div class="form-group">

                                                        <a href="#" data-toggle="modal" data-target="#jd"> JOB DESCRIPTION</a>





                                                    </div>

                                                </div>

                                            </div>

                                        </div>



                                    </div>

                                </div>



                            </div>

                        </div>

                    }

                }

            </div>









            @using (Html.BeginForm("NewBlock2", "Dashboard", FormMethod.Post))

            {

                if (ViewBag.step2 == 1)

                {

                    <div class="row">

                        <div class="col-md-12">

                            <div class="card" style="background-color:powderblue;">

                                <div class="content">

                                    <div class="row">

                                        <h4 style="margin-left:29px;font-weight:bold;"> Step:3  Fill The User Details </h4>



                                    </div>

                                    <div class="row">

                                        <div class="col-md-9">

                                            <div class="col-md-5">



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Fname, "Full name:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name", required = "required" } })

                                                        @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })

                                                        @Html.HiddenFor(a => a.client)

                                                        @Html.HiddenFor(a => a.ClientID)

                                                        @Html.HiddenFor(a => a.Reqid)

                                                        @Html.HiddenFor(a => a.Jobcode)

                                                        @Html.HiddenFor(a => a.Requirement)

                                                        @Html.HiddenFor(a => a.location)

                                                        @Html.HiddenFor(a => a.Clients)

                                                        @Html.HiddenFor(a => a.req)

                                                        @Html.HiddenFor(a => a.status1)

                                                        @Html.HiddenFor(a => a.br)

                                                        @Html.HiddenFor(a => a.pr)

                                                        @Html.HiddenFor(a => a.jobcode1)

                                                        @Html.HiddenFor(a => a.jd)

                                                        @Html.HiddenFor(a => a.lob)







                                                    </div>

                                                </div>





                                            </div>



                                            <div class="col-md-5">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.EmailId, "Email ID:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emailid", required = "required" } })

                                                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>

                                            </div>



                                            <div class="col-md-5">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.PNumber, "Contact Number:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.PNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter valid number", required = "required", @type = "number" } })

                                                        @Html.ValidationMessageFor(model => model.PNumber, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>

                                            </div>

                                            <div class="col-md-2">



                                                <div class="form-group">

                                                    <br />





                                                    @ViewBag.Message



                                                    <input type="submit" value="Check" class="btn btn-primary">

                                                </div>





                                            </div>



                                        </div>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                }

                else

                {

                    <div class="row">

                        <div class="col-md-12">

                            <div class="card" style="background-color:powderblue;">

                                <div class="content">

                                    <div class="row">

                                        <h4 style="margin-left:29px;font-weight:bold;"> Step:3  Fill The User Details </h4>



                                    </div>

                                    <div class="row">

                                        <div class="col-md-9">

                                            <div class="col-md-5">



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Fname, "Full name:", htmlAttributes: new { @class = "control-label", @style = "width:320px;font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name", disabled = "disabled" } })



                                                    </div>

                                                </div>





                                            </div>



                                            <div class="col-md-5">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.EmailId, "Email ID:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emailid", disabled = "disabled" } })

                                                    </div>

                                                </div>

                                            </div>



                                            <div class="col-md-5">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.PNumber, "Contact Number:", htmlAttributes: new { @class = "control-label", @style = "font-weight:bold;" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.PNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter valid number", disabled = "disabled" } })

                                                    </div>



                                                </div>

                                            </div>

                                            <div class="col-md-2">



                                                <div class="form-group">

                                                    <br />



                                                    @ViewBag.Message



                                                    <input type="submit" value="Check" class="btn btn-primary" disabled="disabled">

                                                </div>





                                            </div>



                                        </div>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                }



            }



            @using (Html.BeginForm())

            {



                <div class="panel-group">



                    <!--table view-->

                    <div class="form-group col-md-11">

                        <div class="panel panel-default">

                            @if (ViewBag.step3 == 1)

                            {

                                <div class="panel-heading">

                                    <h2 class="panel-title">



                                        <a data-toggle="collapse" href="#collapse1">Candidates Details</a>





                                    </h2>

                                </div>

                                <div id="collapse1" class="panel-collapse collapse in">

                                    <div class="panel-body">

                                        <div class="form-horizontal">

                                            <div class="col-md-4">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Fname, "Full Name as per Legal ID:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name", required = "required" } })

                                                        @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.DOB, "Date of Birth:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="input-group date form-control" data-date-format="mm-dd-yyyy">

                                                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "input-group date form-control" } })





                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.EmailId, "EmailID:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emailid", required = "required" } })

                                                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>





                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.PNumber, "Contact Number:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.PNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter valid number", required = "required", @type = "number" } })

                                                        @Html.ValidationMessageFor(model => model.PNumber, "", new { @class = "text-danger" })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ANumber, "Alternate Number:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.ANumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter valid number", @type = "number" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.CLocation, "Current Location:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.CLocation, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter location" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.LocPref, "Location Preference(s):", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.LocPref, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.WorkLoc, "Work Location:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.WorkLoc, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.DistHoToWorkLoc, "Distance from home to work location:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.DistHoToWorkLoc, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.TExp, "Total Experience:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.TExp, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.RExp, "Relevant Experience:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.RExp, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Ccompany, "Current Company:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Ccompany, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.EmpType, "Current Role:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.EmpType, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ReasonJobChange, "Reason For Change:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.ReasonJobChange, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.WorkVisaStatus, "Work Authorization:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.WorkVisaStatus, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                            </div>

                                            <div class="col-md-4">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.VisaValidDate, "Visa Validity:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="input-group date form-control" data-date-format="mm-dd-yyyy">

                                                        @Html.EditorFor(model => model.VisaValidDate, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.NationalityID, "Nationality:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.NationalityID, ViewBag.nationality as List<SelectListItem>, new { @class = "form-control text-box single-line", @size = "0" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.CurrentSalary, "Current Salary/Rate:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.CurrentSalary, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>





                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.PurposedBillRate, "Proposed Bill Rate:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.PurposedBillRate, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ExpectedSalary, "Expected Pay Rate:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.ExpectedSalary, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Payrate, "Pay Rate:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Payrate, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.GPPerHour, "Gp Per Hour:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.GPPerHour, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.GPM, "GPM:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.GPM, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.LoadedPayRate, "Loaded PayRate:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.LoadedPayRate, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ClosedPaye, "Closed at LTD/PAYE/B2B/Perm/Umbrella:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.ClosedPaye, new { htmlAttributes = new { @class = "form-control", @type = "decimal" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Insurance, "National Insurance or PASEL:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Insurance, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                    @Html.HiddenFor(a => a.ClientID)

                                                    @Html.HiddenFor(a => a.Reqid)

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ConProjEndDate, "Contract End Date:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="input-group date form-control" data-date-format="mm-dd-yyyy">

                                                        @Html.EditorFor(model => model.ConProjEndDate, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.NoticePeriod, "Official Notice Period:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.NoticePeriod, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.AvailJoinDate, "Availability To Join:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.AvailJoinDate, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.BGVStatus, "Comfortable For BGV:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.BGVStatus, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None"},

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })



                                                    </div>

                                                </div>

                                            </div>

                                            <div class="col-md-4">

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.SameClient, "Has Worked With Same Client:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.SameClient, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None" },

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })



                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.ResonForLeaving, "If yes reason for leaving:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.ResonForLeaving, new { @class = "form-control", Placeholder = "Please add comment", disabled = "disabled" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Interviews, "Other Interviews:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.Interviews, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None" },

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.interviewDetails, "If yes provide details:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.interviewDetails, new { @class = "form-control", Placeholder = "Please provide details", disabled = "disabled" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.OfferRecieved, "Offer Recieved:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.OfferRecieved, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None"},

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },

                                    }, new { @class = "form-control text-box single-line", @size = "0" })



                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Offer, "If yes provide details:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.Offer, new { @class = "form-control", Placeholder = "Please provide details", disabled = "disabled" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.AvailabilityStatus, "Availability For Telephonic Interview:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.AvailabilityStatus, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None" },

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })



                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.TeleInterview, "If yes provide details:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.TeleInterview, new { @class = "form-control", Placeholder = "Please provide details", disabled = "disabled" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.FaceInterview, "Availability For Face to Face Interview:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.FaceInterview, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None" },

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })



                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.FInterview, "If yes provide details:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.FInterview, new { @class = "form-control", Placeholder = "Please provide details", disabled = "disabled" })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.PlannedHolidays, "Any Planned Holidays:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.DropDownListFor(model => model.PlannedHolidays, new List<SelectListItem>

                                    {

                                                new SelectListItem{ Text="None" },

                                    new SelectListItem{ Text="Yes", Value = "Yes" },

                                    new SelectListItem{ Text="No", Value = "No" },



                                    }, new { @class = "form-control text-box single-line", @size = "0" })

                                                        @Html.HiddenFor(a => a.RID)



                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Holidays, "If yes provide details:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.TextAreaFor(model => model.Holidays, new { @class = "form-control", Placeholder = "Please provide details", disabled = "disabled" })

                                                    </div>

                                                </div>



                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Reference1, "Reference 1:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Reference1, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>

                                                <div class="form-group">

                                                    @Html.LabelFor(model => model.Reference2, "Reference 2:", htmlAttributes: new { @class = "control-label" })

                                                    <div class="">

                                                        @Html.EditorFor(model => model.Reference2, new { htmlAttributes = new { @class = "form-control" } })

                                                    </div>

                                                </div>



                                            </div>

                                            @*//additional comments*@

                                            <div class="form-group">

                                                <div class="col-md-8">



                                                    <div>

                                                        @Html.LabelFor(model => model.comments, "Add Comments:", htmlAttributes: new { @class = "control-label" })



                                                        @Html.TextAreaFor(model => model.comments, new { @class = "form-control", Placeholder = "Add valuable Comment" })



                                                        @Html.HiddenFor(a => a.Imagepath)

                                                    </div>

                                                </div>

                                            </div>









                                            <!--Upload file-->

                                            <div class="form-group">

                                                <div class="col-md-12">

                                                    <h3>UploadFile</h3>



                                                    <div>

                                                        <input type="file" id="fileInput" />



                                                        <div class="demo-hint">Maximum allowed file size is <strong>4MB</strong>.</div>





                                                    </div>





                                                </div>

                                            </div>





                                        </div>



                                    </div>





                                    <div class="panel-footer">



                                        <input type="submit" name="submit" value="submit"
                                               formaction="NewBlock1" formmethod="post" class="btn btn-primary" />

                                        <input type="reset" name="submit" value="cancel"
                                               class="btn btn-danger" style="margin:0; margin-left:5px;" />

                                        <a href="#top" class="d-block"><i class="fa fa-angle-double-up" style="margin:0;"></i></a>

                                    </div>

                                </div>

                            }

                            else

                            {

                                <div class="panel-heading">

                                    <h2 class="panel-title">



                                        <a data-toggle="collapse" href="#">Candidates Details</a>





                                    </h2>

                                </div>

                                <div id="collapse1" class="panel-collapse collapse">

                                    <div class="panel-body">

                                        <div class="form-horizontal">





                                        </div>

                                    </div>

                                </div>

                            }



                        </div>

                    </div>

                </div>





            }



        </div>

    </div>

</div>



<a href="#top" class="d-block"><i class="fa fa-angle-double-up" style="margin:0;"></i></a>



}



@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>

    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/jquery.min.js"></script>

    <script src="https://kendo.cdn.telerik.com/2018.2.620/js/kendo.all.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" rel="stylesheet" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert-dev.js"></script>

    <script src="~/Scripts/chosen.jquery.js"></script>

    @*<script src="~/Scripts/jquery-1.12.4.js"></script>

        <script src="~/Scripts/jquery-ui-1.12.1.js"></script>*@

    <script id="fileTemplate" type="text/x-kendo-template">

        <span class='k-progress'></span>

        <div class='file-wrapper'>

            <span class='file-icon #=addExtensionClass(files[0].extension)#'></span>

            <h4 class='file-heading file-name-heading'>Name: #=name#</h4>

            <h4 class='file-heading file-size-heading'>Size: #=size# bytes</h4>

            <strong class="k-upload-status">

                <button type='button' class='k-upload-action'></button>

                <button type='button' class='k-upload-action'></button>

            </strong>

        </div>

    </script>





    <!--datepicker script-->

    <script type="text/javascript">





        var fileSaveNames = [];



        function addExtensionClass(extension) {

            switch (extension) {

                case '.jpg':

                case '.img':

                case '.png':

                case '.gif':

                    return "img-file";

                case '.doc':

                case '.docx':

                    return "doc-file";

                case '.xls':

                case '.xlsx':

                    return "xls-file";

                case '.pdf':

                    return "pdf-file";

                case '.zip':

                case '.rar':

                    return "zip-file";

                default:

                    return "default-file";

            }

        }

        function getreq(clientname) {

            debugger;

            $("#Requirement").on("input", function () {

                debugger;

                $("#Requirement").empty();

                $("#companyList").empty();

                var options = {};

                options.url = "/Dashboard/title";

                options.type = "GET";

                options.data = { "id": clientname };

                options.dataType = "json";

                options.success = function (data) {

                    $("#companyList").empty();

                    for (var i = 0; i < data.length; i++) {

                        $("#companyList").append("<option value='" +

                        data[i].Text + "'></option>");

                    }

                };

                options.error = "error";

                $.ajax(options);

            });

        };



        $(document).ready(function () {

            $("#client").chosen({height:"50px"}





            );

            $("#location").chosen();

            $("#Requirement").chosen();

            $("#NationalityID").chosen();



            $("#Interviews").change(function () {

                debugger;

                if ($("#Interviews").val() == "Yes") {

                    document.getElementById('interviewDetails').disabled = '';

                }

                else {

                    document.getElementById('interviewDetails').disabled = 'disabled';

                }



            });

            $("#SameClient").change(function () {

                debugger;

                if ($("#SameClient").val() == "Yes") {

                    document.getElementById('ResonForLeaving').disabled = '';

                }

                else {

                    document.getElementById('ResonForLeaving').disabled = 'disabled';

                }



            });

            $("#OfferRecieved").change(function () {

                debugger;

                if ($("#OfferRecieved").val() == "Yes") {

                    document.getElementById('Offer').disabled = '';

                }

                else {

                    document.getElementById('Offer').disabled = 'disabled';

                }



            })

            $("#AvailabilityStatus").change(function () {

                debugger;

                if ($("#AvailabilityStatus").val() == "Yes") {

                    document.getElementById('TeleInterview').disabled = '';

                }

                else {

                    document.getElementById('TeleInterview').disabled = 'disabled';

                }



            })

            $("#PlannedHolidays").change(function () {

                debugger;

                if ($("#PlannedHolidays").val() == "Yes") {

                    document.getElementById('Holidays').disabled = '';

                }

                else {

                    document.getElementById('Holidays').disabled = 'disabled';

                }



            })

            $("#FaceInterview").change(function () {

                debugger;

                if ($("#FaceInterview").val() == "Yes") {

                    document.getElementById('FInterview').disabled = '';

                }

                else {

                    document.getElementById('FInterview').disabled = 'disabled';

                }



            })

            if ('@ViewBag.check' != '') {

                sweetAlert('@ViewBag.check');



            }





            if ('@ViewBag.alert' != '') {

                sweetAlert('@ViewBag.alert');



            }

            $("#fileInput").kendoUpload({

                multiple: true,

                async: {

                    saveUrl: "/Dashboard/uploadfile",

                    removeUrl: "remove",

                    autoUpload: false

                },

                validation: {

                    maxFileSize: 4000000



                },



                template: kendo.template($('#fileTemplate').html()),

                success: onSuccess,

            });



            function onSuccess(e) {

                debugger;

                var filepath = e.response.ImagePath;

                var uid = e.files[0].uid;

                var filename = e.response.ImageName;

                fileSaveNames.push(filename);

                document.getElementById('Imagepath').value = fileSaveNames;



            }



            $("#client").change(function () {

                $("#Requirement").empty();

                $("#location").empty();

                var client = $("#client").val();

                debugger;



                $.ajax({

                    type: 'POST',

                    url: '@Url.Action("title")',

                    dataType: 'json',

                    data: { id: $("#client").val() },

                    success: function (city) {

                        var a = [];

                        $.each(city, function (i, city) {

                            a[i] = city.Value;

                            $("#Requirement").append('<option value="'

                                                  + city.Value + '">'

                           + city.Text + '</option>');







                        });



                        $("#Requirement").trigger("chosen:updated");







                        debugger;

                        $.ajax({

                            type: 'POST',

                            url: '@Url.Action("loc")',

                            dataType: 'json',

                            data: { id: $("#Requirement").val() },

                            success: function (city) {

                                var a = [];

                                $.each(city, function (i, city) {

                                    a[i] = city.Value;

                                    $("#location").append('<option value="'

                                                          + city.Value + '">'

                                   + city.Text + '</option>');





                                });

                                $("#location").trigger("chosen:updated");

                            }

                        });

                    }



                });

            });









            $("#Requirement").change(function () {

                $("#location").empty();

                debugger;

                $.ajax({

                    type: 'POST',

                    url: '@Url.Action("loc")',

                    dataType: 'json',

                    data: { id: $("#Requirement").val() },

                    success: function (city) {

                        var a = [];

                        $.each(city, function (i, city) {

                            a[i] = city.Value;

                            $("#location").append('<option value="'

                                                  + city.Value + '">'

                           + city.Text + '</option>');





                        });

                    }

                });

            });

            $("#DOB").kendoDatePicker(

                {

                    format: "yyyy-MM-dd"

                });

            $("#ConProjEndDate").kendoDatePicker(

                 {

                     format: "yyyy-MM-dd"

                 });

            //$("#AvailJoinDate").kendoDatePicker(

            //     {

            //         format: "yyyy-MM-dd"

            //     });

            $("#VisaValidDate").kendoDatePicker(

                 {

                     format: "yyyy-MM-dd"

                 });



        });



    </script>

}

